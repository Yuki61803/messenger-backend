services:
  mcm-messenger-db:
    image: postgres:17-alpine
    container_name: mcm-messenger-db
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 1G
    shm_size: 256mb
    env_file:
      - path: ./.env.dev
        required: true
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "5432"
    networks:
      - internal-net
    volumes:
      - messenger_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1 -p 5432" ]
      interval: 10s
      timeout: 5s
      start_period: 20s
      retries: 10
    restart: unless-stopped

  mcm-messenger:
    container_name: mcm-messenger
    depends_on:
      mcm-messenger-db:
        condition: service_healthy
    build:
      context: ./
      dockerfile: Dockerfile.dev
    command: sh -lc "npm run start:dev"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 3G
        reservations:
          cpus: "1.0"
          memory: 512M
    expose:
      - "3000"
    volumes:
      - .:/app
    env_file:
      - path: ./.env.dev
        required: true
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # port 9229 (inspector) removed to avoid exposing debugging interface in dev.v2
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://127.0.0.1:3000/login >/dev/null 2>&1 || exit 1" ]
      interval: 10s
      timeout: 5s
      start_period: 90s
      retries: 30
    networks:
      - internal-net
    ports:
      - 3000:3000
    restart: unless-stopped

networks:
  internal-net:
    driver: bridge

volumes:
  messenger_db:
  messenger_files: